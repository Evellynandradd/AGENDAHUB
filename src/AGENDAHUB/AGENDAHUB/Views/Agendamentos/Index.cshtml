@model IEnumerable<AGENDAHUB.Models.Agendamentos>
<link rel="stylesheet" href="~/css/Agendamentos.css" asp-append-version="true" />

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-center">Agendamentos</h1>

<div class="row">

    @* Botão Novo Agendamento *@
    <div class="col-xl-6 col-6">
        <div class="row d-flex justify-content-start">
            <div class="col-xl-6 col-6">
                <a asp-action="Create" class="btn btn-outline-info" id="btnNovoAgendamento">+ Novo Agendamento</a>
            </div>
        </div>
    </div>


    @* Campo de pesquisa*@
    <div class="col-xl-6 col-6 d-flex justify-content-end">
        <form asp-action="SearchAgendamentos" method="get">
            <div class="input-group mb-3">
                <input type="text" class="form-control" name="search" placeholder="Pesquisar Agendamento" id="pesquisar">
                <div class="input-group-append">
                    <button class="btn btn-outline-info" type="submit" id="botaoPesquisar"><img src="~/images/pesquisar.png" style="height:1.5rem; width:auto"/></button>
                </div>
            </div>
        </form>
    </div>

</div>

@foreach (var item in Model)
{
    <div class="container d-flex justify-content-center">
        <div class="card mb-3 col-xl-6" id="cardView">
            <span class="float-end text-white mb-2 @GetStatusColor(item.Status)" id="spanView">
                @Html.DisplayFor(modelItem => item.Status)
            </span>
            <div class="card-header text-center">
                <h5 class="card-title">
                    @Html.DisplayFor(modelItem => item.Servico)
                </h5>
            </div>

            <div class="card-body">
                <p class="card-text">
                    <strong>Cliente: </strong>@Html.DisplayFor(modelItem => item.Cliente.Nome)<br>
                    <strong>Contato: </strong>@Html.DisplayFor(modelItem => item.Cliente.Contato)
                    <a href="https://wa.me/@item.Cliente.Contato" target="_blank">
                        <img src="~/images/whatsapp.png" alt="Whatsapp-icon" style="height: 1.2rem; width: auto" />
                    </a>
                    <br>
                    <strong>Data: </strong>@string.Format("{0:dd MMM yyyy}", item.Data)<br>
                    <strong>Horário: </strong>@item.Hora.ToString(@"hh\:mm")<br>
                </p>

                <cite class="card-subtitle mb-2 text-muted">
                    <strong>Profissional: </strong>@Html.DisplayFor(modelItem => item.Profissional)
                </cite>

                <div class="btn-group d-flex justify-content-end" role="group">
                    <a asp-action="Edit" asp-route-id="@item.Id">
                        <img class="btn btn-outline-warning" src="~/images/editar.png" alt="Editar" style="height: 2rem; width: auto" />
                    </a>
                    @*   <a asp-action="Details" asp-route-id="@item.Id">Details</a> | *@
                    <a asp-action="Delete" asp-route-id="@item.Id">
                        <img class="btn btn-outline-danger" src="~/images/excluir.png" alt="Excluir" style="height: 2rem; width: auto" />
                    </a>
                </div>
            </div>
        </div>
    </div>
}

@* Função para deixar o Card de Status colorido *@
@functions {
    string GetStatusColor(AGENDAHUB.Models.Agendamentos.StatusAgendamento status)
    {
        switch (status)
        {
            case AGENDAHUB.Models.Agendamentos.StatusAgendamento.Pendente:
                return "badge bg-warning"; // Laranja
            case AGENDAHUB.Models.Agendamentos.StatusAgendamento.Concluido:
                return "badge bg-success"; // Verde
            case AGENDAHUB.Models.Agendamentos.StatusAgendamento.Cancelado:
                return "badge bg-danger";  // Vermelho
            default:
                return "badge bg-secondary";
        }
    }

}
